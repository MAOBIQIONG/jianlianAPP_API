<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AppOrderMapper">
	<resultMap id="oDetail" type="pd">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<result column="ORDER_NO" property="ORDER_NO" jdbcType="VARCHAR" />
        <result column="STATU" property="STATU" jdbcType="VARCHAR" />
        <result column="CREATE_DATE" property="CREATE_DATE" jdbcType="VARCHAR" />
        <result column="EXPRESS_PRICE" property="EXPRESS_PRICE" jdbcType="VARCHAR" />
        <result column="TOTAL_PRICE" property="TOTAL_PRICE" jdbcType="VARCHAR" />
        <result column="SHOP_USERNAME" property="SHOP_USERNAME" jdbcType="VARCHAR" />
        <result column="SHOP_PHONE" property="SHOP_PHONE" jdbcType="VARCHAR" />
        <result column="SHOP_ADDRESS" property="SHOP_ADDRESS" jdbcType="VARCHAR" />
        <result column="EXPRESS_NAME" property="EXPRESS_NAME" jdbcType="VARCHAR" />
        <result column="EXPRESS_NO" property="EXPRESS_NO" jdbcType="VARCHAR" />
		<collection property="PROD" column="ORDER_NO" javaType="ArrayList"
			ofType="pd" select="AppOrderMapper.findProd" />
	</resultMap>

	<!-- 查询订单列表 -->
	<select id="findOrderList" parameterType="pd" resultType="pd">
		select 
			 a.ORDER_NO,DATE_FORMAT(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s') as CREATE_DATE,a.EXPRESS_PRICE,a.TOTAL_PRICE,
			 CASE  a.ORDER_STATU when '00' then '待付款'
			 when '01' then '待发货'
			 when '02' then '已发货'
			 when '03' then '已完成'
			 else '已取消'
			 end STATU,
			 a.ORDER_STATU,
			 a.TYPE,
			  a.SHOP_ID,
			 SUM(b.PROD_NUM) TOTALNUM,
			 b.PROD_NUM,
			 b.PROD_PRICE,
		     concat(c.PROD_NAME,b.PROD_GUIGE) PROD_NAME,
			(SELECT IMG_PATH FROM s_app_product_img WHERE ORDERBY='1' and PRODUCT_ID = c.id) PRODUCT_IMG
		from s_app_order a
		INNER JOIN s_app_order_detail b 
		on b.ORDER_NO=a.ORDER_NO
		INNER JOIN s_app_product c
		on c.PROD_NO=b.PROD_NO
		
		where a.TYPE=#{TYPE} and a.SHOP_ID IN (SELECT ID FROM s_app_shop Where USER_ID=${USER_ID})
		<if test="ORDER_STATU != null and ORDER_STATU != ''">
			and a.ORDER_STATU=#{ORDER_STATU}
		</if>
		<if test="CREATEDATE != null and CREATEDATE != ''">
			and <![CDATA[a.CREATE_DATE >= #{CREATEDATE}]]>
		</if>
		group by a.ORDER_NO
		order by a.CREATE_DATE desc
		limit #{PAGENO},#{PAGESIZE}
	
	</select>
	
	<!-- 查询订单列表总数 -->
	<select id="findOrderCount" parameterType="pd" resultType="pd">
		SELECT count(a.ORDER_NO) ZS  from (
			select a.*
			from s_app_order a INNER JOIN s_app_order_detail b on b.ORDER_NO=a.ORDER_NO 
			left JOIN 
			s_app_product c on c.PROD_NO=b.PROD_NO  GROUP BY a.ORDER_NO order by a.CREATE_DATE desc
		) a where TYPE=#{TYPE} and a.SHOP_ID IN (SELECT ID FROM s_app_shop Where USER_ID=${USER_ID})
		<if test="ORDER_STATU != null and ORDER_STATU != ''">
			and ORDER_STATU=#{ORDER_STATU}
		</if>
		<if test="CREATEDATE != null and CREATEDATE != ''">
			and <![CDATA[CREATE_DATE >= #{CREATEDATE}]]>
		</if>
		<if test="ENDDATE != null and ENDDATE != ''">
			and <![CDATA[CREATE_DATE <= #{ENDDATE}]]>
		</if>
	</select>
	
	<!-- 查询订单销售业绩 -->
	<select id="findOrderTotalPrice" parameterType="pd" resultType="pd">
		select 
			case when SUM(a.TOTAL_PRICE) is null then 0
			else SUM(a.TOTAL_PRICE)  
			end TOTAL_PRICE
		from s_app_order a
		where a.TYPE=#{TYPE} and a.USER_ID=#{USER_ID} and a.ORDER_STATU='03'
	</select>
	
	<!-- 查询销售佣金列表 -->
	<select id="findCommList" parameterType="pd" resultType="pd">
		<!-- select a.ID,a.ORDER_NO,a.TOTAL_PRICE,DATE_FORMAT(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s') as CREATE_DATE, 
			CASE when SUM(b.PROD_NUM*b.PROD_PRICE*c.COMMISSION_RATE)is null THEN '0'
				ELSE SUM(b.PROD_NUM*b.PROD_PRICE*c.COMMISSION_RATE)
		END 
		COMMISSION
		from s_app_order a
		INNER JOIN s_app_order_detail b on a.ORDER_NO=b.ORDER_NO
		LEFT JOIN s_app_product_sku c on b.PROD_SKUINFO = c.SKU_INFO
		where a.TYPE=#{TYPE} and a.USER_ID=#{USER_ID}
		<if test="ORDER_STATU != null and ORDER_STATU != ''">
			and a.ORDER_STATU=#{ORDER_STATU}
		</if>
		
		GROUP BY a.ORDER_NO
		order by a.CREATE_DATE desc
		limit #{PAGENO},#{PAGESIZE} -->
		select a.ID,a.TOTAL_PRICE,DATE_FORMAT(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s') as CREATE_DATE,
			a.ORDER_NO,case when 
					SUM(b.JS_COMM) is null then 0
					else SUM(b.JS_COMM)
					end COMMISSION
			from s_app_order a
			INNER JOIN 
			s_app_user_comm b on a.ORDER_NO=b.ORDER_NO
			where b.USER_ID=#{USER_ID} GROUP BY b.ORDER_NO
			ORDER BY a.CREATE_DATE desc
			limit #{PAGENO},#{PAGESIZE}
	</select>
	<!-- 查询销售佣金总数 -->
	<select id="findCommCount" parameterType="pd" resultType="pd">
		<!-- select 
		case when 
		SUM(a.COMMISSION) is null then 0
		else SUM(a.COMMISSION)
		end TOTALCOMM 
		from (
		select 
			SUM(b.PROD_NUM*b.PROD_PRICE*c.COMMISSION_RATE) COMMISSION
		from s_app_order a
		INNER JOIN s_app_order_detail b on a.ORDER_NO=b.ORDER_NO
		LEFT JOIN s_app_product_sku c on b.PROD_SKUINFO = c.SKU_INFO
		where a.TYPE=#{TYPE} and a.USER_ID=#{USER_ID}
		<if test="ORDER_STATU != null and ORDER_STATU != ''">
			and a.ORDER_STATU=#{ORDER_STATU}
		</if>
		GROUP BY a.ORDER_NO
		ORDER BY a.CREATE_DATE) a -->
		select case when 
			SUM(JS_COMM) is null then 0
			else SUM(JS_COMM)
			end TOTALCOMM  from s_app_user_comm where USER_ID=#{USER_ID}
	</select>
	
	<!-- 查询七日订单统计 -->
	<select id="findQrTJ" parameterType="pd" resultType="pd">
		SELECT COUNT(ID) ZS FROM s_app_order WHERE USER_ID=#{USER_ID} AND  ORDER_STATU='03' and
		CREATE_DATE LIKE concat('%',#{CREATE_DATE},'%')
	</select>
	
	
	<!-- 新增订单信息 -->
	<insert id="saveOrder" parameterType="pd">
		insert into s_app_order(
			ID,
			USER_ID,
			SHOP_ADDRESS,
			SHOP_PHONE,
			SHOP_USERNAME,
			ORDER_NO,
			TYPE,
			CREATE_DATE,
			ORDER_STATU,
			EXPRESS_PRICE,
			EXPRESS_NAME,
			EXPRESS_NO,
			TOTAL_PRICE,
			SHOP_ID
		) values (
			#{ID},
			#{USER_ID},
			#{SHOP_ADDRESS},
			#{SHOP_PHONE},
			#{SHOP_USERNAME},
			#{ORDER_NO},
			#{TYPE},
			NOW(),
			#{ORDER_STATU},
			#{EXPRESS_PRICE},
			#{EXPRESS_NAME},
			#{EXPRESS_NO},
			#{TOTAL_PRICE},
			#{SHOP_ID}
		)
	</insert>
	
	<!-- 新增订单商品信息 -->
	<insert id="saveOrderPro" parameterType="pd">
		insert into s_app_order_detail(
			ID,
			ORDER_NO,
			PROD_NO,
			PROD_NUM,
			PROD_PRICE,
			PROD_GUIGE,
			PROD_SKUINFO
		) values (
			#{ID},
			#{ORDER_NO},
			#{PROD_NO},
			#{PROD_NUM},
			#{PROD_PRICE},
			#{PROD_GUIGE},
			#{PROD_SKUINFO}
		)
	</insert>
	
	
	<!--修改订单状态的信息-->
	<update id="editOrderStatu" parameterType="pd">
		update s_app_order set
		<if test="FINISH_DATE != null and FINISH_DATE != ''">
		 FINISH_DATE=#{FINISH_DATE},
		</if>
		ORDER_STATU=#{ORDER_STATU}
		
		where ORDER_NO=#{ORDER_NO}
		
	</update>
	
	<!-- 查询订单详情 -->
	<select id="findOrderDetail" parameterType="pd" resultMap="oDetail">
		select 
			 a.ORDER_NO,
			 CASE  a.ORDER_STATU when '00' then '待付款'
			 when '01' then '待发货'
			 when '02' then '已发货'
			 when '03' then '已完成'
			 else '已取消'
			 end STATU,
			 DATE_FORMAT(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s') as CREATE_DATE,
			 a.EXPRESS_PRICE,
			 a.TOTAL_PRICE,
			 a.EXPRESS_NAME,
			 a.EXPRESS_NO,
		     a.SHOP_USERNAME,
		     a.SHOP_PHONE,
		     a.SHOP_ADDRESS,
		     a.ORDER_STATU,
			 a.TYPE,
			 (select sum(prod_num) from s_app_order_detail where ORDER_NO=a.ORDER_NO) TOTALNUM,
			 (select SHOP_NAME from s_app_shop where ID=a.SHOP_ID) SHOP_NAME,
			 a.SHOP_ID
		from s_app_order a
		where a.ORDER_NO=#{ORDER_NO}
		 
	</select>
	
	<!-- 查询订单商品列表 -->
	<select id="findProd" parameterType="pd" resultType="pd">
		select 
		    b.PROD_NUM,
			b.PROD_PRICE,
			concat(c.PROD_NAME,b.PROD_GUIGE) PROD_NAME,
			(SELECT IMG_PATH FROM s_app_product_img WHERE ORDERBY='1' and PRODUCT_ID = c.id) PRODUCT_IMG,
		    c.ID
		from s_app_order_detail  b
		INNER JOIN s_app_product c
		on c.PROD_NO=b.PROD_NO
		where b.ORDER_NO=#{ORDER_NO}
		 
	</select>
	
	<!-- 查询订单商品shu列表 -->
	<select id="findOrderProSku" parameterType="pd" resultType="pd">
		select * from s_app_order_detail where ORDER_NO=#{ORDER_NO}
		 
	</select>
	
	
	
	
	<!-- 确认付款是获取订单信息-->
	<select id="findOrderPay" parameterType="pd" resultType="pd">
		select 
			 a.ID,a.USER_ID,f.USERNAME,f.EMPLOYEECODE,f.PHONE,f.PAY_PASSWPRD,a.ORDER_NO,a.TOTAL_PRICE,b.PROD_NO,concat(e.SHOP_NAME,'-',c.PROD_NAME,b.PROD_GUIGE) PROD_NAME
				from s_app_order a
		    left JOIN s_app_order_detail b
		    on a.ORDER_NO = b.ORDER_NO
		    left JOIN s_app_product c 
				on b.PROD_NO=c.PROD_NO
		    left JOIN s_app_product_shop d on d.PROD_ID=c.ID and d.USER_ID=a.USER_ID
		    left JOIN s_app_shop e on d.SHOP_ID=e.ID
		    left JOIN s_app_user f on a.USER_ID=f.EMPLOYEECODE
		where a.ORDER_NO=#{ORDER_NO}
		GROUP BY a.ORDER_NO
	</select>
	
	
	<!-- app首页统计查询-->
	<select id="findOrdertj" parameterType="pd" resultType="pd">
		SELECT count(a.ORDER_NO) as TIMES from (
		select DISTINCT(a.ORDER_NO),a.create_date,a.TYPE,a.order_statu,a.shop_id
		from s_app_order a INNER  JOIN s_app_order_detail b on b.ORDER_NO=a.ORDER_NO 
		INNER JOIN s_app_product c on c.PROD_NO=b.PROD_NO  
		where a.TYPE=#{TYPE} and a.order_statu='03' and a.SHOP_ID in (SELECT ID FROM s_app_shop Where USER_ID=#{USER_ID}) and a.create_date like '%${CREATE_DATE}%'
		) a
	</select>
	<select id="findSharetj" parameterType="pd" resultType="pd">
		select sum(TIMES) as TIMES,DATE_FORMAT(DATE,'%c月%d日') as DATE from s_app_share where USER_ID=#{USER_ID} and DATE = #{CREATE_DATE} group by DATE
	</select>
	<select id="findViewtj" parameterType="pd" resultType="pd">
		select ID,USER_ID,TIMES,DATE_FORMAT(DATE,'%c月%d日') as DATE,SEVEN_TJ from s_app_view_tj where USER_ID=#{USER_ID} and DATE = #{CREATE_DATE}
	</select>
	
	
	<!-- 查询订单中的商品是否下架 -->
	<select id="findProdStatus" parameterType="java.util.List" resultType="pd">
		select a.STATUS
		from s_app_product a
		where a.PROD_NO in
		<foreach item="id" collection="list" open="(" separator="," close=")">  
     	 	#{id}
    	</foreach>
	</select>
	
	
</mapper>